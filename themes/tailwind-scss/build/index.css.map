{"version":3,"file":"index.css","mappings":";;;AACA;EACE;EACA;EACA;AAAF;AAOE;EAAK;AAJP;AAME;EACE;AAJJ;AAKI;EACE;EACA;EACA;EACA;AAHN;AAOE;EACE,mBAfU;EAgBV;AALJ;AAQE;EACE;EACA;EACA;EACA;EAEA;AAPJ;AAkBM;;EAGE;EACA;EAEA;EACA;EAEA;EACA;EAEA;AApBR;AAuBM;EAAiB;AApBvB;AAqBM;EAAiB;EAEJ;AApBnB;AA8CQ;EAAiB;EACf;EACA;EAGA,aADc;EAEd,YAFc;EAGd;EACA;EAEA;AA3CV;AAmDQ;EAAc;EACZ;EACA;EAUA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;AA5DV;AA8DU;EACE;EACA;EAEA;EACA;EACA;AA7DZ,C;;;;AC5EA,gBAAgB;ACAhB;EACE;EACA;EACA;EACA;EAEA;EACA;EACA;ADCF;;AAPA;EAAyB;AAWzB;;AAVA;EAAyB;AAczB;;AAXA;AAYA;AACA;AACA;AACA;AACA;EAAkB;AAIlB;AAHE;EAAgB;AAMlB;AALI;EAAc;EACZ;EACA;AAQN;AAPM;EAAY;AAUlB;AATM;EAAQ;AAYd;;AARA;AACA;AACA;AAGA;EACE;EACA;EACA;AASF;AALI;EAAgB;EAAiB;AASrC;AARM;EAAc;EAAoB;EApCtC;EACA;AAiDF;AAZQ;EAlCN;EACA;EACA;AAiDF;AAfM;EAAa;AAkBnB;AAjBM;EAAa;AAoBnB;AAjBI;EA5CF;EACA;EAoDI;AAaN;AAtByC;EAxCvC;EACA;EACA;AAiEF;AAdI;EACE;EACA;EACA;EACA;AAgBN,C;;;;AEtFA;EACE;AACF;AAGE;EACE;EACA;EACA;AADJ;AAIC;EACG;AAFJ,C;;;;ACVA,gBAAgB;ACEhB;AAUA;ADTA;EAIE;EACA;EACA;EAAA;AAFF;AAIE;EACE;EACA;EACA;EACA;AAFJ;AAOI;EACE;EACA;EACA;EAcA;EACA;EACA;EAGA;EAQA,sCACE;AA5BR;ACRE;EDKE;IAMI;IACA;IACA;EACN;AACF;ACTE;EDDE;IAWI;IACA;IACA;EAGN;AACF;AAmBI;EAAkB;AAhBtB;AAoBE;EACE;EACA;EACA;AAlBJ;AAoBI;EAA0B;AAjB9B;AAmBI;EACE;AAjBN;AAoBI;EACE;EACA;EACA;EACA;AAlBN,C;;;;AEzDA;EACE;AACF;AAAE;EACE;EAEA;EAEA;EACA;EACA;EAEA;AADJ;AAGI;EACE;EACA;EACA;EAGA;AAHN;AAOM;EACE;AALR,C","sources":["webpack://tailwind-scss/./src/-comps/_layout/header.scss","webpack://tailwind-scss/./src/-comps/_layout/_layout.scss","webpack://tailwind-scss/./src/-comps/_layout/_css-vars.scss","webpack://tailwind-scss/./src/-pages/page-store/filters/checkboxes-flip-layout/_.scss","webpack://tailwind-scss/./src/-pages/page-store/filters/checkboxes-flip-layout/checkbox/_.scss","webpack://tailwind-scss/./src/scss/_mixins.scss","webpack://tailwind-scss/./src/-pages/page-store/filters/chevron-anim/chevron-anim.scss"],"sourcesContent":["// <Header>\nheader#navbar { \n  top: 0;\n  left: 0;\n  width: 100vw;\n   \n\n  $dark: black;\n  $light: white;\n  $dark-blue: #111926;\n\n  li { cursor: pointer; }  \n\n  nav {\n    font-weight: 500;\n    .gutter {\n      height: 100%;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n  \n  nav#top {\n    background: $dark-blue;\n    color: white;    \n  }\n  \n  nav#bottom {\n    backdrop-filter: blur(10px) saturate(180%);\n    -webkit-backdrop-filter: blur(10px) saturate(180%);\n    background-color: rgba(17, 25, 40, 0.75);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.125);\n    // border-top: solid $dark-blue 1px;\n    color: white;\n    // margin-top: -1px; // offset upwards a little to hide the edge effect (it is very evident between the top and bottom), cover with the top navbar\n    // position: relative; \n    // z-index: -1; // place under the top navbar\n\n    .gutter {\n\n      // #logo {\n      //   margin: 0;\n      // }\n      \n      #cart-btn,\n      #hamburger-btn {\n        // -Combine this with the scale factor of the hidden-target.\n        height: 40px;\n        width: 40px;\n      \n        color: white; \n        border: solid white 1px;\n\n        border-radius: 0.25rem;\n        box-shadow: 0 1rem 2rem hsla(0 0% 0% / 0.2);\n\n        cursor: pointer;\n      }\n\n      #hamburger-btn { padding: 0.5rem; }\n      #cart-btn      { padding: 0.635rem; }\n\n      #cart-btn {  position: relative;\n\n        // svg {\n        //   max-width: 50px;\n        //   max-height: 50px;\n        // }\n\n        // -status === 'entered' => child of li.box\n        // -status === 'exiting' => child of #hidden-target\n        // -Scaling of .box-child:\n        //      -3 heights/widths set:\n        //        --1. .box-child\n        //        --2. .box           (parent in status: 'entered')\n        //        --3. #hidden-target (parent in status: 'exiting')\n        //      -Height/Width is set to $box-size on all 3-elements.\n        //      -transform: scale(0.1) is set on the #hiden-target and this is the size the card animates to during animation.\n        //\n        //      --On page load we get the height and width of the first card via JS \n        //        (analagous to how we are handling the height of the grid).\n        //      --Then, we use these values in inline styles set in JSX for .box-child in px-values.\n        //      --Advantage:\n        //        ---Doing it this way allows the grid to be dynamically sized based on the size of the screen.\n        //        ---But in order to do the scaling animation correctly during FLIP we need to explicitly set the height\n        //           and width to constant values, which we achieve as described above.\n\n        // .box-child is moved here\n        #hidden-target { position: absolute;\n          top: 0;\n          left: 0;\n          // background: rgba(255, 255, 0, 0.5);\n          $target-size: 250px; \n          height: $target-size;\n          width: $target-size;\n          transform: scale(0.1); // this transforms the height / width => the animated card will end up this height\n          transform-origin: 20px 20px; // top left\n\n          text-align: left; // text of card moving into cart inherits text-align center without this.\n\n          // .box-child lives here during status: 'exiting'\n          div.box-child {}\n        }\n\n\n\n        #cart-count { position: absolute;\n          top: -25%;\n          right: -25%;\n          \n          // background: $dark;\n          // color: $light;\n\n          \n\n          // border: solid white 1px;\n\n\n          backdrop-filter: blur(5px) saturate(180%);\n          -webkit-backdrop-filter: blur(2px) saturate(180%);\n          background-color: rgba(17, 25, 40, 0.5);\n          border: 1px solid rgba(255, 255, 255, 0.125);\n          color: white;\n\n\n\n          border-radius: 50%;\n          height: 20px;\n          width: 20px;\n\n          span { \n            height: 100%;\n            width: 100%;\n            // background: rgba(0, 0, 0, 0.5);\n            display: grid;\n            place-items: center;\n            font-size: 0.7rem;\n          }\n\n        }\n      }\n    }\n  }\n}// </ Header>","@forward './css-vars';\n\nhtml {                   box-sizing: border-box; }\n*, *::before, *::after { box-sizing: inherit;    }\n\n\n/* ========================================= */\n\n@mixin gutter-padding {\n  padding-left:  var(--gutter-width);\n  padding-right: var(--gutter-width);\n}\n@mixin gutter-margin {\n  max-width: var(--max-width);\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/* ========================================= */\n/* ----------- \"Sticky\"-Footer ------------- */\n/* ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ ╲╱ */\n/*        https://youtu.be/yc2olxLgKLk       */\nhtml {            height: 100%;\n  body {          height: 100%;\n    .react-root { min-height: 100%;\n      display: flex;\n      flex-direction: column;\n      main#page { flex-grow: 1; }       // method 2: portfolio layout uses method 1\n      footer{ justify-self: flex-end; } // method 2 (method-1: margin-top: auto)\n    }\n  }\n}\n/* ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ ╱╲ */\n/* ^^^^^^^^^^^ \"Sticky\"-Footer ^^^^^^^^^^^^^ */\n/* ========================================= */\n\n// html {  scroll-behavior: smooth;  }\nbody {\n  opacity: 0;\n  margin: 0;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  \n  .react-root {\n\n    header#navbar { position: fixed; z-index: 10;\n      nav {         position: relative; z-index: 1; // on top of flyout\n        @include gutter-padding; \n        .gutter { @include gutter-margin; } \n      }\n      nav#top    { height: var(--navbar-top-height); }\n      nav#bottom { height: var(--navbar-bottom-height); }\n    }\n\n    main#page { @include gutter-padding; .gutter { @include gutter-margin; } \n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      // PAGE STYLES ARE INSERTED HERE\n      margin-top: var(--header-height);\n      // background: deepskyblue;\n    }\n\n    footer {\n      height: 100px;\n      background: lightgreen;\n      display: grid;\n      place-items: center;\n    }\n\n  }\n\n}\n",":root {\n  --text-color-primary: #111111;\n  --navbar-height: 120px;\n  --gutter-width: 5%;   // TODO: Responsive gutter width\n  --max-width: 1650px;\n\n  --navbar-top-height: 50px;\n  --navbar-bottom-height: 70px;\n  --header-height: calc(var(--navbar-top-height) + var(--navbar-bottom-height));\n\n  // TODO: Responsive font-sizes\n}",".checkboxes-container {\n  padding: 0.5em;\n\n  // background: lightblue;\n\n  .title {\n    margin-bottom: 0.5rem;\n    font-size: 1.1rem;\n    font-weight: 500;\n  }\n\n .checkbox-container:not(:last-child) {\n    margin-bottom: 0.35em;\n    // background: orange;\n  }\n}","// @use 'scss/globals' as g;\n@use 'scss/mixins' as m;\n\n.checkbox-container {  \n  // height: 50px;\n  // padding: 0.5rem 1rem;\n  // background: lightgreen;\n  display: flex;\n  align-items: center; \n  width: fit-content;\n\n  label {\n    cursor: pointer;\n    font-size: 1rem;\n    display: inherit; // flex\n    align-items: inherit;\n    // -psuedo elements inherit width of parent.\n    // -default display on label is inline => no-width\n\n\n    &::before {\n      content: '';\n      width: 0.95em;\n      height: 0.95em;\n\n      @include m.maxbreak {\n        background: white;\n        padding: 0.8em !important;\n        font-size: 11px;\n      } \n      @include m.minbreak { \n        background: white;\n        padding: 0.6em !important;\n        font-size: 13px;\n      }\n\n\n      border: 0.05em solid black;\n      border-radius: 0.15em;\n      margin-right: 0.5em;\n\n\n      color: black !important;\n\n      // clip-path: polygon(\n      //   100% 0,      /* upper-left */\n      //   100% 0,     \n      //   100% 100%,  \n      //   100% 100%    /* lower-left */\n      // );\n      transition: \n        background-color 0.1s ease\n        // clip-path 0.3s ease-in-out\n      ;\n    }\n\n    &:hover::before { background: gray; }\n  }\n\n\n  input[type='checkbox'] {\n    cursor: pointer;\n    opacity: 0; // need to leave in DOM for tab'ing, etc.\n    position: absolute;\n\n    &:hover + label::before { background: gray; }\n\n    &:focus + label::before {\n      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n    }\n\n    &:checked + label::before { \n      content: '\\002714';\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      // clip-path: polygon(\n      //   0% 0,       /* upper-left */\n      //   100% 0, \n      //   100% 100%, \n      //   0% 100%     /* lower-left */\n      // );\n    }\n  }\n}","@use './globals' as g;\n\n/* ========================================= */\n\n// $pad: 1rem;\n$pad: min(1vw, 1rem);\n\n@mixin my {\n  margin-top: $pad;\n  margin-bottom: $pad;\n}\n\n/* ========================================= */\n\n@mixin maxbreak($break: g.$desktop) {\n  @media (max-width: #{$break}) { \n    @content;\n  }\n}\n\n@mixin minbreak($break: g.$desktop) {\n  @media (min-width: #{$break}) { \n    @content;\n  }\n}\n",".chevron-anim {\n  overflow: hidden;\n  &__title {\n    cursor: pointer;\n    // background: red;\n    height: 30px;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    perspective: 800px;\n\n    &__arrow {\n      transform: rotate3d(1, 0, 0, 0deg);\n      transform-origin: center;\n      transition: transform 0.5s ease;\n\n      // background: red;\n      height: 1.1rem;\n      // display: flex;\n      // align-items: center;\n      \n      &-up {\n        transform: rotate3d(1, 0, 0, 180deg);\n      }\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}